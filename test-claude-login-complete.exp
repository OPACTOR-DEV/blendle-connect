#!/usr/bin/expect -f

# Claude Code Login Automation Script
set timeout 60

puts "========================================="
puts "Claude Code Automated Login Test"
puts "========================================="
puts ""

# Step 1: Clean up first
puts "Step 1: Cleaning up existing authentication..."
exec pkill -f claude 2>/dev/null || true
exec security delete-generic-password -s "Claude Code-credentials" 2>/dev/null || true
puts "  ‚úì Cleaned up existing auth"

# Step 2: Start Claude
puts "\nStep 2: Starting Claude..."
spawn claude

# Step 3: Handle theme selection
expect {
    "Choose the text style" {
        puts "\n=== THEME SELECTION DETECTED ==="
        puts "  ‚Üí Selecting option 1 (Dark mode)..."
        send "1\r"
        exp_continue
    }
    "Dark mode" {
        if {[string match "*‚ùØ*" $expect_out(buffer)]} {
            puts "  ‚Üí Pressing Enter for Dark mode..."
            send "\r"
            exp_continue
        }
    }
    "Welcome to Claude" {
        puts "\n=== CLAUDE STARTED ==="

        # Step 4: Send /login command
        puts "  ‚Üí Sending /login command..."
        sleep 1
        send "/login\r"
        exp_continue
    }
    "Select login method" {
        puts "\n=== LOGIN METHOD SELECTION DETECTED ==="
        puts "  ‚Üí Selecting option 1 (Anthropic account)..."
        sleep 0.5
        send "1\r"
        exp_continue
    }
    -re "\\[1\\].*Anthropic" {
        puts "\n=== ANTHROPIC ACCOUNT OPTION DETECTED ==="
        puts "  ‚Üí Selecting option 1..."
        sleep 0.5
        send "1\r"
        exp_continue
    }
    -re {(https://[^\s\)]+)} {
        set url $expect_out(1,string)
        puts "\n========================================="
        puts "üéâ SUCCESS! Browser authentication URL detected:"
        puts "URL: $url"
        puts "========================================="

        # Try to open the URL
        puts "\nAttempting to open browser..."
        exec open $url &
        puts "  ‚úì Browser should be opening..."

        # Wait a bit then exit
        sleep 5
        send "/exit\r"
    }
    timeout {
        puts "\n‚ö†Ô∏è  Timeout reached"
        puts "Claude might already be authenticated or there's an issue"
        send "/exit\r"
    }
}

expect eof
puts "\nTest complete!"